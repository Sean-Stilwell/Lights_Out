{"version":3,"sources":["components/Cell.js","components/Constants.js","components/WinnerModal.js","components/index.js","components/Header.js","components/Footer.js","App.js","index.js","assets/LightOff.png","assets/LightOn.png"],"names":["Cell","props","this","value","TouchableOpacity","onPress","_handlePress","bind","Image","source","require","style","styles","image","index","View","container","_renderCell","Component","StyleSheet","create","flex","justifyContent","alignItems","width","height","margin","WinnerModal","Modal","animationType","transparent","visible","onRequestClose","console","log","centeredView","modalView","Text","modalText","Pressable","button","buttonText","backgroundColor","padding","paddingLeft","paddingRight","marginTop","color","fontWeight","textAlign","fontSize","Game","state","board","youWon","moves","_clickTile","_randomize","setState","_hasWon","i","length","Math","random","rows","push","row","_renderRow","rowIndex","cells","_renderRows","button_text","flexDirection","Header","text","paddingBottom","Footer","Linking","openURL","link","paddingTop","registerRootComponent","module","exports"],"mappings":"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","file":"static/js/app.3d8a4ffe.chunk.js","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport { StyleSheet, View, Text, TouchableOpacity, Image } from 'react-native';\r\nimport { CELL_OFF, CELL_ON } from './Constants';\r\n\r\nexport default class Cell extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    _renderCell(){\r\n        switch(this.props.value){\r\n            case CELL_OFF:\r\n                return <TouchableOpacity onPress={this._handlePress.bind(this)}>\r\n                    <Image \r\n                        source={require('../assets/LightOff.png')}\r\n                        style={styles.image}\r\n                    />\r\n                    {/* <Text>{this.props.index}</Text> */}\r\n                </TouchableOpacity>\r\n            case CELL_ON:\r\n                return <TouchableOpacity onPress={this._handlePress.bind(this)}>\r\n                    <Image\r\n                        source={require('../assets/LightOn.png')} \r\n                        style={styles.image}\r\n                    />\r\n                    {/* <Text>{this.props.index}</Text> */}\r\n                </TouchableOpacity>\r\n        }\r\n    }\r\n\r\n    _handlePress(){ \r\n        this.props.onPress(this.props.index);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                {this._renderCell()}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    image: {\r\n        width: 75,\r\n        height: 75,\r\n        margin: 2,\r\n    }\r\n});","export const CELL_OFF = 0;\r\nexport const CELL_ON = 1;\r\n\r\nexport const WINNING = [\r\n    [CELL_OFF, CELL_OFF, CELL_OFF, CELL_OFF],\r\n    [CELL_OFF, CELL_OFF, CELL_OFF, CELL_OFF],\r\n    [CELL_OFF, CELL_OFF, CELL_OFF, CELL_OFF],\r\n    [CELL_OFF, CELL_OFF, CELL_OFF, CELL_OFF],\r\n    [CELL_OFF, CELL_OFF, CELL_OFF, CELL_OFF]\r\n]\r\n\r\nexport const BOARD_HEIGHT = 5;\r\nexport const BOARD_WIDTH = 4;","import React, { Component } from \"react\";\r\nimport { Alert, Modal, StyleSheet, Text, Pressable, View } from \"react-native\";\r\n\r\nexport default class WinnerModal extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                animationType=\"fade\"\r\n                transparent={true}\r\n                visible={this.props.visible}\r\n                onRequestClose={() => {\r\n                    console.log(\"Modal has been closed.\");\r\n                }}>\r\n                <View style={styles.centeredView}>\r\n                    <View style={styles.modalView}>\r\n                        <Text style={styles.modalText}>You won!</Text>\r\n                        <Pressable style={styles.button} onPress={this.props.onPress}>\r\n                            <Text style={styles.buttonText}>Play again?</Text>\r\n                        </Pressable>\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    centeredView: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: 'rgba(0,0,0,0.5)',\r\n        padding: 20\r\n    },\r\n    modalView: {\r\n        padding: 20,\r\n        paddingLeft: 40,\r\n        paddingRight: 40,\r\n        margin: 20,\r\n        backgroundColor: \"#1F1F1F\",\r\n        alignItems: \"center\"\r\n    },\r\n    button: {\r\n        marginTop: 20,\r\n        padding: 10,\r\n        backgroundColor: \"#ffA812\",\r\n    },\r\n    buttonText: {\r\n        color: \"black\",\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\"\r\n    },\r\n    modalText: {\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\",\r\n        fontSize: 30\r\n    }\r\n});","import React, { Component, useState } from 'react';\r\nimport { StyleSheet, View, Text, Image, Button, TouchableOpacity } from 'react-native';\r\nimport Cell from './Cell';\r\nimport WinnerModal from './WinnerModal';\r\nimport { BOARD_HEIGHT, BOARD_WIDTH, CELL_OFF, CELL_ON } from './Constants';\r\n\r\nexport default class Game extends Component {\r\n\r\n    state = { \r\n        board: [CELL_OFF, CELL_OFF, CELL_OFF, CELL_OFF, \r\n                CELL_OFF, CELL_OFF, CELL_OFF, CELL_OFF,\r\n                CELL_OFF, CELL_OFF, CELL_OFF, CELL_OFF,\r\n                CELL_OFF, CELL_OFF, CELL_OFF, CELL_OFF,\r\n                CELL_OFF, CELL_OFF, CELL_OFF, CELL_OFF],\r\n        youWon: false,\r\n        moves: 0,\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this._clickTile = this._clickTile.bind(this);\r\n        this._randomize();\r\n    }\r\n\r\n    /**\r\n     * [0,  1,  2,  3]\r\n     * [4,  5,  6,  7]\r\n     * [8,  9,  10, 11]\r\n     * [12, 13, 14, 15]\r\n     * [16, 17, 18, 19]\r\n     * @param {int} index The index of the cell that was clicked\r\n     */\r\n    _clickTile(index){\r\n        const board = this.state.board;\r\n\r\n        // Toggle the value of the cell\r\n        board[index] = board[index] === CELL_OFF ? CELL_ON : CELL_OFF;\r\n\r\n        // Toggle the cell above the clicked cell\r\n        if (index >= 4) {\r\n            board[index - 4] = board[index - 4] === CELL_OFF ? CELL_ON : CELL_OFF;\r\n        }\r\n\r\n        // Toggle the cell below the clicked cell\r\n        if (index <= 15) {\r\n            board[index + 4] = board[index + 4] === CELL_OFF ? CELL_ON : CELL_OFF;\r\n        }\r\n\r\n        // Toggle the cell to the left of the clicked cell\r\n        if (index % 4 !== 0) {\r\n            board[index - 1] = board[index - 1] === CELL_OFF ? CELL_ON : CELL_OFF;\r\n        }\r\n\r\n        // Toggle the cell to the right of the clicked cell\r\n        if (index % 4 !== 3) {\r\n            board[index + 1] = board[index + 1] === CELL_OFF ? CELL_ON : CELL_OFF;\r\n        }\r\n\r\n        this.setState({\r\n            board: board,\r\n            moves: this.state.moves + 1,\r\n            youWon: this._hasWon()\r\n        });\r\n    }\r\n\r\n    _randomize(){\r\n        let board = this.state.board;\r\n        for (let i = 0; i < board.length; i++) {\r\n            if (Math.random() > 0.4) {\r\n                this._clickTile(i);\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            board: board,\r\n            youWon: this._hasWon(),\r\n            moves: 0\r\n        });\r\n    }\r\n\r\n    _hasWon(){\r\n        for (let i = 0; i < this.state.board.length; i++) {\r\n            if (this.state.board[i] === CELL_ON) {\r\n                return false;\r\n            }\r\n        }\r\n        console.log(\"You won!\");\r\n        return true;\r\n    }\r\n    \r\n    _renderRows() {\r\n        const rows = [];\r\n\r\n        for (let i = 0; i < BOARD_HEIGHT; ++i) {\r\n        rows.push(\r\n            <View key={i} style={styles.row}>\r\n                {this._renderRow(i)}\r\n            </View>,\r\n        );\r\n        }\r\n\r\n        return rows;\r\n    }\r\n\r\n    _renderRow(rowIndex) {\r\n        const cells = [];\r\n        for (let i = 0; i < BOARD_WIDTH; ++i) {\r\n            cells.push(\r\n                <Cell key={rowIndex * 4 + i} index={rowIndex * 4 + i} value={this.state.board[rowIndex*4+i]} onPress={this._clickTile}/>,\r\n            );\r\n        }\r\n        return cells;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                {this._renderRows()}\r\n                <WinnerModal visible={this.state.youWon} onPress={() => this._randomize()}/>\r\n                <TouchableOpacity style={styles.button} onPress={() => this._randomize()}>\r\n                    <Text style={styles.button_text}>New Game</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    row: {\r\n      flexDirection: 'row',\r\n      width: '100%',\r\n    },\r\n    button: {\r\n        marginTop: 10,\r\n        height: 40,\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n        width: 140,\r\n        backgroundColor: '#ffA812',\r\n    },\r\n    container: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    button_text: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n    }\r\n  });","import React, {Component} from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\n\r\nexport default function Header(){\r\n    return(\r\n        <View style={styles.container}>\r\n            <Text style={styles.text}>\r\n                Lights Out!\r\n            </Text>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        paddingBottom: 30,\r\n    },\r\n    text: {\r\n        fontSize: 60,\r\n        fontWeight: 'bold',\r\n        color: 'white',\r\n    }\r\n});","import React, {Component} from 'react';\r\nimport { Linking, StyleSheet, Text, View } from 'react-native';\r\n\r\nexport default function Footer(){\r\n    return(\r\n        <View style={styles.container}>\r\n            <Text style={styles.text}>\r\n                Developed by <Text \r\n                    onPress={() => Linking.openURL('https://www.seanstilwell.ca')}\r\n                    style={styles.link}>Sean Stilwell\r\n                    </Text>\r\n            </Text>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        paddingTop: 20,\r\n    },\r\n    text: {\r\n        fontSize: 20,\r\n        color: 'white',\r\n    },\r\n    link: {\r\n        color: '#ffA812',\r\n    }\r\n});","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport Game from './components';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Header />\n      <Game />\n      <Footer />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1F1F1F',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","module.exports = __webpack_public_path__ + \"static/media/LightOff.a90fc9ae.png\";","module.exports = __webpack_public_path__ + \"static/media/LightOn.fdd77f9b.png\";"],"sourceRoot":""}